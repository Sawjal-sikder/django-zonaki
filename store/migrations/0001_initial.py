# Generated by Django 3.2.22 on 2024-07-10 11:39

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('paymentApp', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='bannerImg')),
                ('http_url_link', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='brandImg')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_name', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Campaign Category',
                'verbose_name_plural': 'Campaign Categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConductData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('subject', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('view_status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('amount', models.FloatField()),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_to', models.DateTimeField(default=django.utils.timezone.now)),
                ('max_value', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Coupon Quantity')),
                ('used', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlashSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('FlashSaleOn_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('FlashSale_expire_date', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'FlashSale',
                'verbose_name_plural': 'FlashSales',
            },
        ),
        migrations.CreateModel(
            name='ImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('image', models.FileField(upload_to='gallery')),
            ],
            options={
                'verbose_name': 'Image Gallery',
                'verbose_name_plural': 'Image Galleries',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('On the way', 'On the way'), ('Complete', 'Complete'), ('Cancel', 'Cancel')], default='Pending', max_length=150)),
                ('total_order_amount', models.CharField(blank=True, max_length=150, null=True)),
                ('paid_amount', models.CharField(default=0, max_length=150)),
                ('due_amount', models.CharField(default=0, max_length=150)),
                ('ordered', models.BooleanField(default=False)),
                ('orderId', models.CharField(blank=True, max_length=150, null=True)),
                ('paymentId', models.CharField(blank=True, max_length=150, null=True)),
                ('payment_option', models.CharField(max_length=150)),
                ('order_read_status', models.BooleanField(default=False)),
                ('redx_percel_traking_number', models.CharField(blank=True, max_length=150, null=True)),
                ('others_transport_trakink_url', models.URLField(blank=True, null=True)),
                ('ordered_date', models.DateTimeField(auto_now_add=True)),
                ('order_complate_date', models.DateTimeField(auto_now=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.coupon')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PriceRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_range', models.CharField(max_length=100, unique=True)),
                ('ordering', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Price Range',
                'verbose_name_plural': 'Price Range',
                'ordering': ['ordering'],
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Privacy Policy',
                'verbose_name_plural': 'Privacy Policy',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('parent_code', models.CharField(max_length=150)),
                ('weight', models.DecimalField(decimal_places=3, default=0.0, max_digits=10)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('image', models.ImageField(default='ProductImg/noimg.jpg', upload_to='ProductImg')),
                ('hover_image', models.ImageField(blank=True, default='noimg.jpg', null=True, upload_to='ProductImg')),
                ('price', models.IntegerField()),
                ('discount_price', models.IntegerField(blank=True, null=True)),
                ('product_purchase_price', models.IntegerField()),
                ('sort_discription', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('discription', ckeditor_uploader.fields.RichTextUploadingField()),
                ('aditional_discription', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('flash_sale_add_and_expire_date', models.DateTimeField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=100, null=True)),
                ('meta_keyword', models.CharField(blank=True, max_length=100, null=True)),
                ('return_type', models.CharField(choices=[('', '-- Select Return Type --'), ('no_return', 'No Return'), ('7_days', '7 Days Return'), ('15_days', '15 Days Return'), ('30_days', '30 Days Return'), ('60_days', '60 Days Return')], default='no_return', max_length=20)),
                ('warranty_type', models.CharField(choices=[('', '-- Select Warranty Type --'), ('no_warranty', 'No Warranty'), ('3_months', '3 Months Warranty'), ('6_months', '6 Months Warranty'), ('1_year', '1 Year Warranty'), ('2_years', '2 Years Warranty'), ('3_years', '3 Years Warranty'), ('lifetime', 'Lifetime Warranty')], default='no_warranty', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.brand')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Returns_Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Returns Policy',
                'verbose_name_plural': 'Returns Policy',
            },
        ),
        migrations.CreateModel(
            name='ShippingAndDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Shipping & Delivery',
                'verbose_name_plural': 'Shipping & Delivery',
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Terms & Conditions',
                'verbose_name_plural': 'Terms & Conditions',
            },
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('video_embed_link', models.URLField(max_length=500)),
            ],
            options={
                'verbose_name': 'Video Gallery',
                'verbose_name_plural': 'Video Galleries',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Vision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_information', ckeditor.fields.RichTextField()),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='websiteLogo')),
                ('bkash_number', models.CharField(blank=True, max_length=15, null=True)),
                ('nagad_number', models.CharField(blank=True, max_length=15, null=True)),
                ('rocket_number', models.CharField(blank=True, max_length=15, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Website Information',
                'verbose_name_plural': 'Website Informations',
            },
        ),
        migrations.CreateModel(
            name='WhishLIst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wish_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'Wishlist',
                'verbose_name_plural': 'Wishlist',
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variation_code', models.CharField(blank=True, max_length=120, null=True)),
                ('image_for_color', models.ImageField(blank=True, null=True, upload_to='ColorImage')),
                ('video_url', models.URLField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.size')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_reason', models.CharField(choices=[('', '-- Select Reason --'), ('item_is_defective_or_not_working', 'Item is defective or not working'), ('component_or_accessory_is_missing_from_the_item', 'Component or accessory is missing from the item'), ('item_has_missing_freebie', 'Item has missing freebie'), ('item_does_not_match_description_or_picture', 'Item does not match description or picture'), ('i_did not_order_this_size', 'I did not order this size'), ('i_received_the_wrong_item', 'I received the wrong item'), ('item_does_not_fit_me', 'Item does not fit me'), ('do_not_want_the_item_anymore', 'Do not want the item anymore'), ('item_is_damaged/broken/has_dent_or_scratches', 'Item is damaged/broken/has dent or scratches')], max_length=100)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='return-product')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('On the way', 'On the way'), ('Complete', 'Complete'), ('Cancel', 'Cancel')], default='Pending', max_length=150)),
                ('comment', models.TextField()),
                ('return_shipment', models.CharField(choices=[('', '--  Drop off Locations --'), ('ecourier', 'eCourier'), ('pathao_courier', 'Pathao Courier'), ('delivery_tiger', 'Delivery Tiger'), ('karatoa_courier_service', 'Karatoa Courier Service'), ('janani_express_parcel_service', 'Janani Express Parcel Service'), ('sheba_delivery', 'Sheba Delivery'), ('sonar_courier', 'Sonar Courier'), ('sa_paribahan', 'SA Paribahan'), ('sundarban_courier_service', 'Sundarban Courier Service')], max_length=100)),
                ('bank_transfer', models.CharField(choices=[('', '--  Select Bank Transfer --'), ('bkash', 'BKASH Ltd'), ('nagad', 'NAGAD Ltd'), ('rocket', 'ROCKET Ltd'), ('upay', 'Upay Ltd')], max_length=100)),
                ('account_number', models.CharField(max_length=150)),
                ('account_name', models.CharField(max_length=150)),
                ('branch_name', models.CharField(max_length=150)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(to='store.OrderItem')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('review', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='ReviewImg')),
                ('approve_status', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
            },
        ),
        migrations.CreateModel(
            name='ProductPercel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_address', models.CharField(blank=True, max_length=150, null=True)),
                ('order_note', models.TextField(blank=True, null=True)),
                ('merchant_invoice_id', models.CharField(blank=True, max_length=150, null=True)),
                ('cash_collection_amount', models.CharField(max_length=150)),
                ('delivery_area', models.CharField(blank=True, max_length=150, null=True)),
                ('delivery_area_id', models.CharField(blank=True, max_length=150, null=True)),
                ('parcel_weight', models.CharField(blank=True, max_length=150, null=True)),
                ('tracking_id', models.CharField(blank=True, max_length=150, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.order')),
            ],
            options={
                'verbose_name': 'Product Percel',
                'verbose_name_plural': 'Product Percels',
            },
        ),
        migrations.CreateModel(
            name='ProductImgGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='ProductImgGallery')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='CategoryImg')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ('commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='store.productcategory')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='categoris',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.productcategory', verbose_name='Product Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='price_range',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.pricerange'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_models', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=15)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='store.websiteinformation')),
            ],
        ),
        migrations.AddField(
            model_name='orderitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='variation',
            field=models.ManyToManyField(to='store.Variation'),
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(related_name='order', to='store.OrderItem'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='paymentApp.shipingaddress'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='store.websiteinformation')),
            ],
        ),
        migrations.CreateModel(
            name='DealOfTheDayProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'Deal Of The Day',
                'verbose_name_plural': 'Deal Of The Days',
            },
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='store.websiteinformation')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.campaign')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'Campaign Product',
                'verbose_name_plural': 'Campaign Products',
            },
        ),
    ]
